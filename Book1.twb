<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10000.16.0917.1429                               -->
<workbook source-build='10.0.1 (10000.16.0917.1429)' source-platform='win' version='10.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sample-CoffeeChain (2)' inline='true' name='federated.0b42sjb1dgf73e0zja6w01ne0v7c' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample-CoffeeChain' name='msaccess.196kn9f0yajyoa1d1h4bh1tgs676'>
            <connection authentication='no' class='msaccess' driver='' filename='C:\Users\Alessandro\Dropbox\SDSU - Open University- 2016-2017\MIS 691-Decision Support Systems\Assignment 2\Sample-CoffeeChain.mdb' mdwpath='' server='' username='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[factTable].[ProductId]' />
              <expression op='[Product].[ProductId]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Location].[Area Code]' />
                <expression op='[factTable].[Area Code]' />
              </expression>
            </clause>
            <relation connection='msaccess.196kn9f0yajyoa1d1h4bh1tgs676' name='Location' table='[Location]' type='table' />
            <relation connection='msaccess.196kn9f0yajyoa1d1h4bh1tgs676' name='factTable' table='[factTable]' type='table' />
          </relation>
          <relation connection='msaccess.196kn9f0yajyoa1d1h4bh1tgs676' name='Product' table='[Product]' type='table' />
        </relation>
        <cols>
          <map key='[Area Code (factTable)]' value='[factTable].[Area Code]' />
          <map key='[Area Code]' value='[Location].[Area Code]' />
          <map key='[Budget COGS]' value='[factTable].[Budget COGS]' />
          <map key='[Budget Margin]' value='[factTable].[Budget Margin]' />
          <map key='[Budget Profit]' value='[factTable].[Budget Profit]' />
          <map key='[Budget Sales]' value='[factTable].[Budget Sales]' />
          <map key='[COGS]' value='[factTable].[COGS]' />
          <map key='[Date]' value='[factTable].[Date]' />
          <map key='[Inventory]' value='[factTable].[Inventory]' />
          <map key='[Margin]' value='[factTable].[Margin]' />
          <map key='[Market Size]' value='[Location].[Market Size]' />
          <map key='[Market]' value='[Location].[Market]' />
          <map key='[Marketing]' value='[factTable].[Marketing]' />
          <map key='[Product Type]' value='[Product].[Product Type]' />
          <map key='[ProductId (Product)]' value='[Product].[ProductId]' />
          <map key='[ProductId]' value='[factTable].[ProductId]' />
          <map key='[Product]' value='[Product].[Product]' />
          <map key='[Profit]' value='[factTable].[Profit]' />
          <map key='[Sales]' value='[factTable].[Sales]' />
          <map key='[State]' value='[Location].[State]' />
          <map key='[Total Expenses]' value='[factTable].[Total Expenses]' />
          <map key='[Type]' value='[Product].[Type]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Area Code</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Area Code]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>Area Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I2&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market Size</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market Size]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>Market Size</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Location]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area Code</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Area Code (factTable)]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Area Code</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I2&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget COGS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Budget COGS]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Budget COGS</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Budget Margin]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Budget Margin</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Budget Profit]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Budget Profit</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Budget Sales]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Budget Sales</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COGS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[COGS]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>COGS</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>19</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Inventory</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Inventory]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Inventory</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Margin]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Margin</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Marketing</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Marketing]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Marketing</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProductId</remote-name>
            <remote-type>2</remote-type>
            <local-name>[ProductId]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>ProductId</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I2&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Expenses</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Expenses]</local-name>
            <parent-name>[factTable]</parent-name>
            <remote-alias>Total Expenses</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>Product</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Type]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>Product Type</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProductId</remote-name>
            <remote-type>2</remote-type>
            <local-name>[ProductId (Product)]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>ProductId</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I2&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[Product]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Area Code (factTable)]' role='dimension' type='ordinal' />
      <column datatype='integer' default-format='*000' name='[Area Code]' role='dimension' semantic-role='[AreaCode].[Name]' type='ordinal' />
      <column caption='Cogs' datatype='real' name='[COGS]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Product Type, Product, State (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Product Type, Product, State]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;(Coffee, Amaretto, California), (Coffee, Amaretto, Colorado), (Coffee, Amaretto, Iowa) and 174 more&quot;'>
            <value>(&quot;Coffee&quot;,&quot;Amaretto&quot;,&quot;California&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Amaretto&quot;,&quot;Colorado&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Amaretto&quot;,&quot;Iowa&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Amaretto&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Amaretto&quot;,&quot;Ohio&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Amaretto&quot;,&quot;Oregon&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Amaretto&quot;,&quot;Utah&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Amaretto&quot;,&quot;Wisconsin&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Columbian&quot;,&quot;California&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Columbian&quot;,&quot;Colorado&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Columbian&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Columbian&quot;,&quot;Florida&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Columbian&quot;,&quot;Illinois&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Columbian&quot;,&quot;Iowa&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Columbian&quot;,&quot;Louisiana&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Columbian&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Columbian&quot;,&quot;Missouri&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Columbian&quot;,&quot;Nevada&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Columbian&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Columbian&quot;,&quot;New Mexico&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Columbian&quot;,&quot;New York&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Columbian&quot;,&quot;Ohio&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Columbian&quot;,&quot;Oklahoma&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Columbian&quot;,&quot;Oregon&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Columbian&quot;,&quot;Texas&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Columbian&quot;,&quot;Utah&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Columbian&quot;,&quot;Washington&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Columbian&quot;,&quot;Wisconsin&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Decaf Irish Cream&quot;,&quot;California&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Decaf Irish Cream&quot;,&quot;Colorado&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Decaf Irish Cream&quot;,&quot;Florida&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Decaf Irish Cream&quot;,&quot;Illinois&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Decaf Irish Cream&quot;,&quot;Iowa&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Decaf Irish Cream&quot;,&quot;Louisiana&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Decaf Irish Cream&quot;,&quot;Missouri&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Decaf Irish Cream&quot;,&quot;Nevada&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Decaf Irish Cream&quot;,&quot;New Mexico&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Decaf Irish Cream&quot;,&quot;Ohio&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Decaf Irish Cream&quot;,&quot;Oklahoma&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Decaf Irish Cream&quot;,&quot;Oregon&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Decaf Irish Cream&quot;,&quot;Texas&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Decaf Irish Cream&quot;,&quot;Utah&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Decaf Irish Cream&quot;,&quot;Washington&quot;)</value>
            <value>(&quot;Coffee&quot;,&quot;Decaf Irish Cream&quot;,&quot;Wisconsin&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Caffe Latte&quot;,&quot;California&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Caffe Latte&quot;,&quot;Louisiana&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Caffe Latte&quot;,&quot;Nevada&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Caffe Latte&quot;,&quot;New Mexico&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Caffe Latte&quot;,&quot;Oklahoma&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Caffe Latte&quot;,&quot;Oregon&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Caffe Latte&quot;,&quot;Texas&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Caffe Latte&quot;,&quot;Utah&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Caffe Latte&quot;,&quot;Washington&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Caffe Mocha&quot;,&quot;California&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Caffe Mocha&quot;,&quot;Colorado&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Caffe Mocha&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Caffe Mocha&quot;,&quot;Florida&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Caffe Mocha&quot;,&quot;Illinois&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Caffe Mocha&quot;,&quot;Iowa&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Caffe Mocha&quot;,&quot;Louisiana&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Caffe Mocha&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Caffe Mocha&quot;,&quot;Missouri&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Caffe Mocha&quot;,&quot;Nevada&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Caffe Mocha&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Caffe Mocha&quot;,&quot;New Mexico&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Caffe Mocha&quot;,&quot;New York&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Caffe Mocha&quot;,&quot;Ohio&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Caffe Mocha&quot;,&quot;Oklahoma&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Caffe Mocha&quot;,&quot;Oregon&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Caffe Mocha&quot;,&quot;Texas&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Caffe Mocha&quot;,&quot;Utah&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Caffe Mocha&quot;,&quot;Washington&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Caffe Mocha&quot;,&quot;Wisconsin&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Decaf Espresso&quot;,&quot;California&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Decaf Espresso&quot;,&quot;Colorado&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Decaf Espresso&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Decaf Espresso&quot;,&quot;Florida&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Decaf Espresso&quot;,&quot;Illinois&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Decaf Espresso&quot;,&quot;Iowa&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Decaf Espresso&quot;,&quot;Louisiana&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Decaf Espresso&quot;,&quot;Missouri&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Decaf Espresso&quot;,&quot;Nevada&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Decaf Espresso&quot;,&quot;New Mexico&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Decaf Espresso&quot;,&quot;Ohio&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Decaf Espresso&quot;,&quot;Oklahoma&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Decaf Espresso&quot;,&quot;Oregon&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Decaf Espresso&quot;,&quot;Texas&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Decaf Espresso&quot;,&quot;Utah&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Decaf Espresso&quot;,&quot;Washington&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Decaf Espresso&quot;,&quot;Wisconsin&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Regular Espresso&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Regular Espresso&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Espresso&quot;,&quot;Regular Espresso&quot;,&quot;New York&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Chamomile&quot;,&quot;California&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Chamomile&quot;,&quot;Colorado&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Chamomile&quot;,&quot;Florida&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Chamomile&quot;,&quot;Illinois&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Chamomile&quot;,&quot;Iowa&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Chamomile&quot;,&quot;Louisiana&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Chamomile&quot;,&quot;Missouri&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Chamomile&quot;,&quot;Nevada&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Chamomile&quot;,&quot;New Mexico&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Chamomile&quot;,&quot;Ohio&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Chamomile&quot;,&quot;Oklahoma&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Chamomile&quot;,&quot;Oregon&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Chamomile&quot;,&quot;Texas&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Chamomile&quot;,&quot;Utah&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Chamomile&quot;,&quot;Washington&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Chamomile&quot;,&quot;Wisconsin&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Lemon&quot;,&quot;California&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Lemon&quot;,&quot;Colorado&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Lemon&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Lemon&quot;,&quot;Florida&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Lemon&quot;,&quot;Illinois&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Lemon&quot;,&quot;Iowa&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Lemon&quot;,&quot;Louisiana&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Lemon&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Lemon&quot;,&quot;Missouri&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Lemon&quot;,&quot;Nevada&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Lemon&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Lemon&quot;,&quot;New Mexico&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Lemon&quot;,&quot;New York&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Lemon&quot;,&quot;Ohio&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Lemon&quot;,&quot;Oklahoma&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Lemon&quot;,&quot;Oregon&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Lemon&quot;,&quot;Texas&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Lemon&quot;,&quot;Utah&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Lemon&quot;,&quot;Washington&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Lemon&quot;,&quot;Wisconsin&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Mint&quot;,&quot;California&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Mint&quot;,&quot;Colorado&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Mint&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Mint&quot;,&quot;Florida&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Mint&quot;,&quot;Illinois&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Mint&quot;,&quot;Nevada&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Mint&quot;,&quot;New York&quot;)</value>
            <value>(&quot;Herbal Tea&quot;,&quot;Mint&quot;,&quot;Utah&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Darjeeling&quot;,&quot;California&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Darjeeling&quot;,&quot;Colorado&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Darjeeling&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Darjeeling&quot;,&quot;Florida&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Darjeeling&quot;,&quot;Illinois&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Darjeeling&quot;,&quot;Iowa&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Darjeeling&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Darjeeling&quot;,&quot;Missouri&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Darjeeling&quot;,&quot;Nevada&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Darjeeling&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Darjeeling&quot;,&quot;New York&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Darjeeling&quot;,&quot;Ohio&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Darjeeling&quot;,&quot;Oregon&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Darjeeling&quot;,&quot;Utah&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Darjeeling&quot;,&quot;Washington&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Darjeeling&quot;,&quot;Wisconsin&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Earl Grey&quot;,&quot;California&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Earl Grey&quot;,&quot;Colorado&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Earl Grey&quot;,&quot;Illinois&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Earl Grey&quot;,&quot;Iowa&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Earl Grey&quot;,&quot;Missouri&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Earl Grey&quot;,&quot;Nevada&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Earl Grey&quot;,&quot;New York&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Earl Grey&quot;,&quot;Ohio&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Earl Grey&quot;,&quot;Oregon&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Earl Grey&quot;,&quot;Utah&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Earl Grey&quot;,&quot;Washington&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Earl Grey&quot;,&quot;Wisconsin&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Green Tea&quot;,&quot;California&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Green Tea&quot;,&quot;Colorado&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Green Tea&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Green Tea&quot;,&quot;Florida&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Green Tea&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Green Tea&quot;,&quot;Missouri&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Green Tea&quot;,&quot;Nevada&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Green Tea&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Green Tea&quot;,&quot;New York&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Green Tea&quot;,&quot;Oregon&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Green Tea&quot;,&quot;Utah&quot;)</value>
            <value>(&quot;Tea&quot;,&quot;Green Tea&quot;,&quot;Washington&quot;)</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[ProductId (Product)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Product Id' datatype='integer' name='[ProductId]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Product]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Inclusions (Product,Product Type,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Product:nk]' />
          <groupfilter function='level-members' level='[none:Product Type:nk]' />
          <groupfilter function='level-members' level='[none:State:nk]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' hidden='true' name='[Product Type, Product, State]' name-style='unqualified'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Product Type]' />
          <groupfilter function='level-members' level='[Product]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.510373' measure-ordering='alphabetic' measure-percentage='0.489627' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Which </run>
            <run bold='true'>product type</run>
            <run> yields the maximum profit in each </run>
            <run bold='true'>market&#10;size</run>
            <run>?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample-CoffeeChain (2)' name='federated.0b42sjb1dgf73e0zja6w01ne0v7c' />
          </datasources>
          <datasource-dependencies datasource='federated.0b42sjb1dgf73e0zja6w01ne0v7c'>
            <column datatype='string' name='[Market Size]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Profit]' derivation='Max' name='[max:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Market Size]' derivation='None' name='[none:Market Size:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Product Type:nk]' direction='DESC' using='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[max:Profit:qk]'>
            <groupfilter function='member' level='[none:Market Size:nk]' member='&quot;Major Market&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Profit:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Market Size:nk]</rows>
        <cols>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Product Type:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Which </run>
            <run bold='true'>product type </run>
            <run> yields maximum </run>
            <run bold='true'> sales </run>
            <run>in each </run>
            <run bold='true'> market</run>
            <run>?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample-CoffeeChain (2)' name='federated.0b42sjb1dgf73e0zja6w01ne0v7c' />
          </datasources>
          <datasource-dependencies datasource='federated.0b42sjb1dgf73e0zja6w01ne0v7c'>
            <column datatype='string' name='[Market]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Product Type:nk]</rows>
        <cols>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Market:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Which </run>
            <run bold='true'>product </run>
            <run> and </run>
            <run bold='true'>product type </run>
            <run>give the maximum </run>
            <run bold='true'>profit</run>
            <run> in which </run>
            <run bold='true'>state</run>
            <run>?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample-CoffeeChain (2)' name='federated.0b42sjb1dgf73e0zja6w01ne0v7c' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0b42sjb1dgf73e0zja6w01ne0v7c'>
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Product Type:nk] / ([federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Product:nk] / [federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]))</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Which </run>
            <run bold='true'>product </run>
            <run> and </run>
            <run bold='true'>product type </run>
            <run>give the maximum </run>
            <run bold='true'>profit</run>
            <run> in which </run>
            <run bold='true'>state</run>
            <run>? 2 (manual selection of the best profit after an automized selection of the maximum profit for each state)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample-CoffeeChain (2)' name='federated.0b42sjb1dgf73e0zja6w01ne0v7c' />
          </datasources>
          <datasource-dependencies datasource='federated.0b42sjb1dgf73e0zja6w01ne0v7c'>
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[Inclusions (Product,Product Type,State)]'>
            <groupfilter function='reorder-dimensionality' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Product Type:nk]' member='&quot;Coffee&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:State:nk]' member='&quot;Colorado&quot;' />
                      <groupfilter function='member' level='[none:Product:nk]' member='&quot;Amaretto&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:State:nk]' member='&quot;Illinois&quot;' />
                      <groupfilter function='member' level='[none:Product:nk]' member='&quot;Decaf Irish Cream&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:State:nk]' member='&quot;Massachusetts&quot;' />
                      <groupfilter function='member' level='[none:Product:nk]' member='&quot;Columbian&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Product Type:nk]' member='&quot;Espresso&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:State:nk]' member='&quot;California&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Product:nk]' member='&quot;Caffe Latte&quot;' />
                        <groupfilter function='member' level='[none:Product:nk]' member='&quot;Decaf Espresso&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:State:nk]' member='&quot;Illinois&quot;' />
                      <groupfilter function='member' level='[none:Product:nk]' member='&quot;Caffe Mocha&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:State:nk]' member='&quot;New York&quot;' />
                      <groupfilter function='member' level='[none:Product:nk]' member='&quot;Regular Espresso&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Product Type:nk]' member='&quot;Herbal Tea&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:State:nk]' member='&quot;California&quot;' />
                      <groupfilter function='member' level='[none:Product:nk]' member='&quot;Lemon&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:State:nk]' member='&quot;Iowa&quot;' />
                      <groupfilter function='member' level='[none:Product:nk]' member='&quot;Chamomile&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:State:nk]' member='&quot;Nevada&quot;' />
                      <groupfilter function='member' level='[none:Product:nk]' member='&quot;Mint&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Product Type:nk]' member='&quot;Tea&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:State:nk]' member='&quot;Iowa&quot;' />
                      <groupfilter function='member' level='[none:Product:nk]' member='&quot;Earl Grey&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:State:nk]' member='&quot;Nevada&quot;' />
                      <groupfilter function='member' level='[none:Product:nk]' member='&quot;Darjeeling&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:State:nk]' member='&quot;Oregon&quot;' />
                      <groupfilter function='member' level='[none:Product:nk]' member='&quot;Green Tea&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[none:Product:nk]' />
                <hierarchy name='[none:Product Type:nk]' />
                <hierarchy name='[none:State:nk]' />
              </order>
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Product:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Columbian&quot;</bucket>
              <bucket>&quot;Regular Espresso&quot;</bucket>
              <bucket>&quot;Decaf Espresso&quot;</bucket>
              <bucket>&quot;Darjeeling&quot;</bucket>
              <bucket>&quot;Chamomile&quot;</bucket>
              <bucket>&quot;Caffe Mocha&quot;</bucket>
              <bucket>&quot;Earl Grey&quot;</bucket>
              <bucket>&quot;Lemon&quot;</bucket>
              <bucket>&quot;Caffe Latte&quot;</bucket>
              <bucket>&quot;Decaf Irish Cream&quot;</bucket>
              <bucket>&quot;Mint&quot;</bucket>
              <bucket>&quot;Amaretto&quot;</bucket>
              <bucket>&quot;Green Tea&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[Inclusions (Product,Product Type,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-color' scope='cols' value='#000000' />
            <format attr='border-style' scope='cols' value='none' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' data-class='total' scope='cols' value='#000000' />
            <format attr='border-width' scope='cols' value='2' />
            <format attr='border-style' scope='cols' value='none' />
            <format attr='border-color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='border-style' data-class='subtotal' scope='cols' value='none' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' data-class='total' scope='cols' value='#000000' />
            <format attr='border-width' scope='cols' value='3' />
            <format attr='border-style' scope='cols' value='none' />
            <format attr='border-color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='border-style' data-class='subtotal' scope='cols' value='none' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='rows' value='4' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='3' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='2' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-size' scope='cols' value='5' />
            <format attr='stroke-color' scope='cols' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='3' />
                <format attr='stroke-color' value='#000000f2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Product Type:nk] / ([federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Product:nk] / [federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]))</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Which  </run>
            <run bold='true'>product </run>
            <run> in which </run>
            <run bold='true'> market </run>
            <run> has the </run>
            <run bold='true'> maximum inventory?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample-CoffeeChain (2)' name='federated.0b42sjb1dgf73e0zja6w01ne0v7c' />
          </datasources>
          <datasource-dependencies datasource='federated.0b42sjb1dgf73e0zja6w01ne0v7c'>
            <column datatype='real' name='[Inventory]' role='measure' type='quantitative' />
            <column datatype='string' name='[Market]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Inventory]' derivation='Sum' name='[sum:Inventory:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Inventory:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Market:nk]</rows>
        <cols>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Product Type:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='16'>Type decaf has maximum sales  in which state?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample-CoffeeChain (2)' name='federated.0b42sjb1dgf73e0zja6w01ne0v7c' />
          </datasources>
          <datasource-dependencies datasource='federated.0b42sjb1dgf73e0zja6w01ne0v7c'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]' direction='DESC' using='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]' />
          <filter class='categorical' column='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Decaf&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' field='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]' value='#000000' />
            <format attr='line-pattern' value='solid' />
            <format attr='stroke-color' value='#000000' />
            <format attr='stroke-size' value='4' />
            <encoding attr='space' class='0' field='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]' field-type='quantitative' max='50000.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-orientation' data-class='total' scope='cols' value='0' />
            <format attr='font-size' field='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]' value='12' />
            <format attr='color' field='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]' value='#000000' />
            <format attr='text-orientation' field='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]' value='0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-orientation' data-class='total' field='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]' value='0' />
            <format attr='wrap' data-class='total' field='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]' value='off' />
            <format attr='vertical-align' data-class='total' field='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]' value='bottom' />
            <format attr='text-align' data-class='total' field='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]' value='left' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
            <format attr='color' field='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]' value='#000000' />
            <format attr='font-size' field='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]' value='12' />
            <format attr='font-family' field='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]' value='Arial' />
            <format attr='font-size' field='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]' value='14' />
            <format attr='color' field='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]' value='#000000' />
            <format attr='font-family' field='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]' value='Arial' />
            <format attr='font-size' field='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]' value='12' />
            <format attr='color' field='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]' value='#000000' />
            <format attr='font-family' field='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]' value='Arial' />
            <format attr='text-align' field='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]' value='center' />
            <format attr='vertical-align' field='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]' value='center' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-family' field='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]' value='Arial' />
            <format attr='color' field='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]' value='normal' />
            <format attr='font-size' field='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk] / [federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk])</rows>
        <cols>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;New Hampshire&quot;</value>
                <value>&quot;Decaf&quot;</value>
                <value>1972.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Massachusetts&quot;</value>
                <value>&quot;Decaf&quot;</value>
                <value>2902.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;New Mexico&quot;</value>
                <value>&quot;Decaf&quot;</value>
                <value>8238.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Ohio&quot;</value>
                <value>&quot;Decaf&quot;</value>
                <value>8997.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Connecticut&quot;</value>
                <value>&quot;Decaf&quot;</value>
                <value>10714.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Missouri&quot;</value>
                <value>&quot;Decaf&quot;</value>
                <value>11835.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Wisconsin&quot;</value>
                <value>&quot;Decaf&quot;</value>
                <value>13449.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='7' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Louisiana&quot;</value>
                <value>&quot;Decaf&quot;</value>
                <value>13645.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='8' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Texas&quot;</value>
                <value>&quot;Decaf&quot;</value>
                <value>14195.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='9' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Oregon&quot;</value>
                <value>&quot;Decaf&quot;</value>
                <value>15471.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='10' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Utah&quot;</value>
                <value>&quot;Decaf&quot;</value>
                <value>16287.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='11' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Oklahoma&quot;</value>
                <value>&quot;Decaf&quot;</value>
                <value>16576.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='12' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;New York&quot;</value>
                <value>&quot;Decaf&quot;</value>
                <value>18997.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='13' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Washington&quot;</value>
                <value>&quot;Decaf&quot;</value>
                <value>19584.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='14' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Florida&quot;</value>
                <value>&quot;Decaf&quot;</value>
                <value>20758.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='15' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Colorado&quot;</value>
                <value>&quot;Decaf&quot;</value>
                <value>24095.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='16' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Iowa&quot;</value>
                <value>&quot;Decaf&quot;</value>
                <value>24153.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='17' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Nevada&quot;</value>
                <value>&quot;Decaf&quot;</value>
                <value>28690.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='18' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Illinois&quot;</value>
                <value>&quot;Decaf&quot;</value>
                <value>35999.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='19' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                    <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Type:nk]</field>
                  <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Sales:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;California&quot;</value>
                <value>&quot;Decaf&quot;</value>
                <value>41067.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Market Size:nk]</field>
            <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Product Type:nk]</field>
            <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Product:nk]</field>
            <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:ProductId (Product):ok]</field>
            <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Profit:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Market:nk]</field>
            <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Product Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='151'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Product Type:nk]</field>
            <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Product:nk]</field>
            <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Profit:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Product Type:nk]</field>
            <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Product:nk]</field>
            <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Market:nk]</field>
            <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:Product Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0b42sjb1dgf73e0zja6w01ne0v7c].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='84' name='Sheet 1' width='192'>
      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
      oYu/Jfg/1xHxH71M0isAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='124' name='Sheet 2' width='192'>
      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
      JvXx/D+GeiKX+UbKbAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      z9rIAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='144' name='Sheet 5' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOydd3hU19G43+1VvffehQogei+mGYMB44p7iR0nTv3iJL98cZzPjtPtOO4F
      Y1OMqWt6bwKBhECABIim3stKWml7+f0h3BLbgNFFK7zv8/h5jHbvzJzdO3vPmTlnRuRyuVx4
      8PA9RdzfBnjw0J94HMDD9xqPA3j4XuNxAA/fazwO4OF7jccBPHyv8TiAh+81Hgfw8L3G4wAe
      vtd4HMDD9xrpl/9ht9vp750REokEsXhg+2VPTw/t7e0oFIr+NsXDFfgvB3A6nf1lC8CAv/kB
      du7cSWFhIS+88IJgOqxWK3K5XDD5drsdsVgs6Pch9BiuRof0G19xA9574w1uv+MWVu25SKq0
      gqDsmXR1OxiRFfuN1+hrz9BGGImRvjfO0K/hfKuJT8vaBJPvcrkQiUQCywcQWodw8q9Gh1s7
      QFNTE3a7mca2DsJkTWhMRpraLBzYspKaVjNGsQ93L7yNi0e2cqi0htThk0lVddDl8mHfxq2c
      re1g6JT5DEkMuuG2m21O9Cb7Ddfr4doYWPONnhYKTlyi+PBBEkbNQtZYwPHSIt5ZX8oDD95L
      /tI3Kb1whvKKCyxffYAZs2/FR9gnrIcBzsBygMtofQMI9/dGo1Zi0TciDU5EpdQSprXTYQSJ
      PIRfPHMnnyx+g6Wb9/W3uR7cmAHpAF+ZloZkEmIoZO26VdQokon3A6fdQFHxOTKyc5DYjP1m
      pgf3R/TlE2Fms7nfo0AKhQKJRAJAh16Pl5eGLqMVuciGVK6ix+xAhhWV1hdLTwdipTdiWzeN
      LR0EhkUgc5qwosBh1KM3WAgOD0ctv7FLHZ1Ox3u6Pcx/6tc3VK+Ha8etF8G+fn4A+Hl/MZHv
      Da1rAJB6976O3IcYjc/ld3ghB1CF4BNwoyz9b6J8FYyJ8xZMvt3uQCqVCCbf4XAiFokQiYWL
      0gg9hqvR4dYOMJDxVUlJCFAJJt+TB+gbHW7tAOsWv0L2nB8Q76/gwMaVJE+8kxDNtcloLi+i
      1BTMpJwYYYz8BhxVhzDveVEw+U6HE6dEuJvT6XQiEokEjdMLPYar0eHWDrB/x8dsq5Dxr+ee
      ovTIHoJG3omjoYQjZ5oYP3E8TRfPEZeZhaWlkjZ8cTSWcaJCz6jxEwnRQv6eXdSfL6M+bAp5
      EbBrXxHhaUMZlhEruO2OplJsJS3C6hBU+o3hRozh23S4dRRIHjiIwb51rM8/Cy4w1h/nn8sO
      kJPixz9e/YAT+9dRUqVn+6r3uXCmkNUF9ST7GvnT66vYveod2pRx2PR1gIV33/6QpEEZvP/S
      SwiXn/Uw0HBrB0AkZt7DT7B/5du0mp3UlR+jtqmOLTuL6LJ0M2x4Lgf37aKwwkFOQjC21gsc
      O1uFvqODi+dryMnKYMyE8SicLryVIvbvO4yhtQtPYNTDZ7i3AwBy3yh+evdQPt5aTGh8GlHh
      CSyYM5lwvyBiBw3j0sY30AyaRnv5UXxSxjE4IQhjTw8JiRGcKC2n8NBBrPY2Squd3DF7DKau
      dmw2Ty0wD724dR6guPAwWcNGIMNFwZ4tpI+cSWdFEfknapk0YzqhPipOHtqGf/okIrQ2dm3e
      hMMnHI1czaghKezbuRW7IoDwxAwU7acputRFfLAX8UPGEaQWbnGn0+nI//ej/O/MEMF0eOgb
      3NoBBio6nY6ClX/juYcmCabD6XQKGqJ0upyIEDgKJPAYrkaHW0eBBjKSuHEop/5BMPmePEDf
      6HBrBzhTVkZiRgay/jbku2BsgeZSwcSL7Q4QMIsqcjhBLAIBnwBCj+FqdLi1A6xbtYqnMzJw
      GrvQG8z4+QdgMxlRe3vR09mJ2scbU3c3KqUCfXs7SNUE+HkL+Z1dPS1noOwTwcQL/cXdiEno
      jbj5rqTDrR0AwNpRzSuvLCEpIZzqLjU+rScZ//SzvPbIvTzx9gese/MjhsVLqXAG03jyILOf
      +RNDIq8xXezhe4vbh0EbLxTjnziOO++9F2P9CZLTo9i3ZRtRg9PZ+ul2/BIz8PXzo62xhvbW
      OiqbDf1tsocBhNs7gMrLj8amWqzGLpwuFanDxnJg9VrG3jaPI0uXkpY5iO07i3jwqR+TGubd
      71EsDwMLt3aAnMGDCU8cxdRUBe9/tJ6Z9zxISFgC0+ZMITUhh1vvmkFOYghz5k5m3ZIP0CYO
      J1jZ31Z7GEh48gACoNPpKFz/Gi88MUswHS6ErNfQK58boEPoeMWVdLj9InjAEp4HI54RTLxN
      4Bi643IeQCRgHkDoMVyNDrd2AJfLhdHQQbfJio9/IErZV58MFpMRZAoU1xBLtlt6sLjkaJTC
      ZhcsdjMdJr1g8m02GzKHcGNw2B2IxCJBE2FCj+FqdLi1A1w8vAnd8RbiguScPNvMM798Bj/l
      F1/IAd0SRNnzmJx29XtuKg4sZoNpAj+bnSmEyZ+z5cxG6lddFFSHh+vHjR3AwpL1+fzPC3/C
      Sypi6PnTSGwdvP7qW1hFEoKzJhEMgJOVb/2ZepMUeWAGt8RbeXPdcabPvoVLJQUYzWbUCSOZ
      lSphse4whksHCZ0znn3r3qOwshuXzI8fPn4vGvnAXnd4+G64cRSom+5uGV7S3iVMVGIaHaVb
      6YmdwE9+/gzFm5dhAWgt4VBjOD/9yc/h9GbKGlrJGDOHkalBKL2DCPbXcGjnIVYt28Q9P/kl
      D94+CXoa2FDYzk+e+TEZ4kryzws3VfHg3rixA/gSEWClrqf3QNuula9TXNX1xcsS8RfGfx7I
      kiAWg1ajprWylGq9hJFjRuOt+GJLi0gs/o+wgJiboB6vh++IW4dBu+rKeGv5FtQKEQ6vBJ64
      ZwLvv/oGFpGUsOxJRFnKEaVOoWbXB9QZJShDBjE1povzDGVUjIFX3l6Lv4+csgYJv3xwNMt1
      +Vhbyomb/SzxXfkUVhgQKQN48pF70Mj7zgt0Oh2/ee9/yF6Q1mcyPQiDWzvAQMXjAAMHN14E
      D2xmpM3md3f8P8Hk22w2ZDIBw6AOR28eQMCttUKP4Wp0eBxAIBRSBT4q4XoUWCU3wYEYgcdw
      NTrc2gFe+tXDKGOGIgeyh4+jrKCYRU8+gOprZkgXT5zAKymNYLUcp93CX/72N3767G/pryZF
      J9qKeO/sK8IpcLkEPaxyQzZDCD6Gr+rwknmzMOGhr7zs1g6gN8v57VNP4Q1gbSd/4y6s3S3o
      1q6jwyZn5h13cmbfUuraVYR4+5MWHcuJbZ9woclEaWULVkMjq1dvoK3byi3zF5EaLlytzv/E
      7DDRYfVUIHInXPSubx02A1vXrqPGIHHnMCg4DPUsXbyYxYtX0Gru/UU6/On7OOInsXBaCm+9
      uZJD+44wacF8jFXlXDydz+E6LfcvnITIAnVnjuEdn4u/+SLLtx/t59F4cBtEYvImzWFKvMS9
      nwASbSh33H03XoBc1FvOqrOtg+jR4XgFK7EY9iMNDCZUJUcshu7WFlQBqai8wggPVlN/oZzi
      tg7Gx8dzvtPTrshDL2KxktbKA7R45bj3EwCRGIVSiVKp5LMq3bnjJ7Fz5bt8+P4y8ibPAhGI
      Ls9TgzNGYD+3jeUffcCZeiMukRSFzEnJ8VLa27r7cSAe3AmjvpzVG4toqznj3nkAQ1cXGm/v
      Xi91OenpMaHSqOnpbMfslBLg54Oxx4BGo8ViNCJRqnCYuzGYHMjlErw0Stra9MiVKkRiGd5a
      4cqVfxmdTserG//GjB9NvCH6PFwdPnI/Hk39KU67hdZWPU7cfBHs5f2lRatIjEbbe9jdyzcA
      r8t/1mp7/0+p6X1NpvFG+aUz8UHB/VOdLcknndnRdwom3+6wI5UI9/U5nJcbZAgYpRF6DP+p
      QybuDYeKpQqCQ0MBN3eAgYy/IpBk3wzB5HsKY/WNDrd1AGNTOZtPdrFgah57V79Bd8wMbs2L
      YvXyVcy65y6+fjLj5MCOjWSMmom/Rgp0c/RwBUNHDPpGPQ5jC4fLWhmd17fbFlqq93Nq3+/7
      VOaXEb40ogsRDNjSiKkjfoFM4XXF97mtAyi91BTs/pQFk1I4cqKcrtNibh00g0Mldcya1cT6
      bTtRhqUxefRgzhXt5ESVkWmzpnLuVCENHTa8QuKZOjYZqUzK+dMnaWiopsMVwPSJI+iqO8OO
      Q2cJDQ1Bqi/mz2ur+eDNF7lweBuNdj+mTx7N+eIjNLTXI/ZPZcrw9Gu2v6utnNryTgE+GQ9X
      Q9LQp5EpvOhsquBSu4Th2YmcPrKTc51qZk0eiUwiwtlZ675RILE6khBROxW1F5EnTyXA2cCZ
      U8eIHDac9cuXEpY+jOINb1N0fD8vryhmVHYUF2taMLQ2o43LoTJ/KceqKtCt2kX+6veolcfT
      dWwLu06d5d9vfsKEcVm89uJL+MSkk5Q+lDOb3qXUFESctIbXP9nJ6iWvoYwfwbEVL3PWcx8P
      UGxU1nXS2lABpgsUXZKR7dPJ/rNNADScKnRfBwAR47P8+URXREJiKllJ3nysO8Xw3GSUMhEF
      Bw5gMNkwqWKZma3mg2WrqWloQxsUTmZCFMH+WrqM5l5R3uEMTo8hLMgHfWM5ZlkUYeGJDM6M
      QyqVIZXJudTUzJCcNFIyc2mqrETtnUBqcjih/mK6PR01BigysnMHIZWIQBGO1nKWXYXFVFX2
      tq6yiNXu7ACQOXo0W9dvJS0pktSMTPJPniM1SEHZhTZumT4JY0srFkMbyqg8HrxzMiVHTvQ2
      dvtPQeIv/ibxjkPjqOVSxVlOnalHppBgM3cRFxrBkSPHKTlaSFRSEhJE7lFj1MN14KRLr6ez
      s5MuE4y5ZRbJkTGkp4ZhMpkRB0Qjee6555777O12u50vpQX6BalU+vnCSKoNIj0pidSUGLz8
      ghmUnk5cbDTpSWGUnCxn4qy5RMfEozJVU1ZjZeGds4kICyMoKJiAwBDCwmKIi44gKS2ZkKAg
      /AKCCA8PI0AJF2ua6TC5uPWuhQTY20gbfxtePZXoZVHMnzaS4LBgQkKCCAwKIywsHNU17Not
      Ly+ntHgDOalagT4lD1ciLusBpHIphfv2YbQ5sMv96K4pxeKfytB4NZu2FzI4K8a9E2FC4HJa
      2bZmBVXtVrLH3MKIjL5vn6rT6di89hWeeeKWPpf9GU6HE7GgbVJdiEQCR4EEHEPS0KeRybVf
      GwZ1OixYbBJUSqn7RoGEQiSWM/2OBwTXExg5kvRRzwom35MH+O6IJYrPt9S7tQMc3b+DxBFT
      8ZXD2eMFhKWNxOcqan/aDY0cPN3GuOEZYDdxuOgkQ4YNQy7571+z0yeKiEjNxUfRtx+F01yL
      te1gn8r8Mg6HA6uAT8ob0Si7r8cg9clCLL1y7P8r1/SZdgFY+ur/oDjxv7z49O3sWbuEiT8Z
      idTSRnOHkbDwcIyGTnz9/dG3tOIb5E9newf+/v6IVT7sX/kc2tCXkF3YSH5tMMOHO2msq8Uu
      0RIR6k9Xeytd3RY2rf2Y2T9Kw2Ew4eUXiOxrnOS7YO88gbl6cZ/I+iZsgkq/MfTlGNTJv0Es
      9cJuMdLebSU4wBeToZ26bjvhEeEopGJcdgu1dQ1oA0LxVYrc2wHkoYPRNu4hv3wkALbOSv76
      wVJysmJYq1chrS9hwU9/wq8ffITnP/gXi9/exh9++zhiqYrHn7iXl17/OzKHiF/9392c2PYh
      O6uV+HWfI3ziIg6+/TsGzXoIk93FpaNbWH3WzE9/eG+fOYCH/sJB6bFCjpxv4Yn7Z6Fbo8Mv
      QEtpdS6zx6ZTVribM012rJYSIv3dui4QiMQyHvzBw6x4+x3Mdhc1J/ZyurGT+uYODhYeJDk+
      kCPbNhCaN4xta9YTP2Ls59eGJI8mW1HNkDt+SIBSQv7+s8y//y4W3TONfVv2ogiJZ870SXjb
      a/jTX5YwfcHtaGRu/XF4uCok5IycQGyIN6DATw0VdW34+/durJSKRNTVVlNxsYzuHrt7OwCA
      T1Q29w9XsXT3abwCQkgeNIJHHriLuZMmkJOTwbJlB7hz7mg+XZ3PiKzoLy4UiQn098PPzweA
      kAARl6raqb94kYCYWGQyaW+cXxXJS3/+Gave/wiLw9NA+6bCpqfFEcxDd0ym4kIlAIlDJ/H0
      Ew+THhPF0Cmz3TsPYDL2kJyeSWxqLjJ7FyOn30Ngzzm27S8hd8xEEmMiMEnkTB4xDJdKxei8
      HKTiL6YwVrMRv6hUAjUS4tLTObpDxyWjP4sWTMJpsxKfkITNaiJlyES8zfUoQ+Pw6YOq0eXl
      5VSf28v4YeHXLcvD1SMLGItYrmX/hjUcKztHq92XeK2B7UcuMGLsKPJ3bCMsUMHKVTpihkwk
      QtLy/csD3Ah0Oh0Ht/yD//2JcI2yXS6XoBGaG1OwoW/HoIp5BIkq8it/+zzU6jJQ3wjhYV+N
      Ern1InggIwsYgzZVuO3QnjzANSLyIjzsv//s1g7gcrnoam+mvctEYGg4Xio5ba0t+AUGIQZM
      3V0gV6OSfzEMq8mAFSXaa9m7IAA9VisNXcJtI7Xb7EhlAp4IczgQi8SIxAKeCLvCGPzVGhRS
      YW9Rt3aAyqNbWFvUQlqsH2dXr2Puw0/wxh9/x+9feRMtcHDjsv9qkHHx4CpOMYaFU5L7z3Bg
      Y9kpzq1Y2q82DHRemHUbuZFRgupwYwewsnj1Pv7nhZfQSkUMCt/M6g35AFQe387mI93k+IIE
      G0v+/RIGl4xmexB3DYId65ZyYb+F7FmPE9xewK6yFuw2EY/fP4NfPf8mOQk+XGpzkRCsRBQ2
      mNsyZSzbegJLWy0zn/w9w2NvXAEtD1fCyYmDO9lzup2fPHYnx/esY39pE2Nm3M6QxFCsDaX8
      5cNtRMUkMTjJj/wjp6ho6OCZx+az+pNN+CcPZtFtE75RuhuHQbsx9MjRXm6QofELpL2jEWNz
      Kb//56fcf9/sy9UizIjEXvj7BXHy0G56gFHT5vPw3VMpLjnB2p1H+eHPfsptgxSs33caiX8c
      P3rsAWSqUB57eBE1pafQdxgICQtD42gi/2R1fw7aw38hJnv0LaRF+wE9lJxpJicnm6ig3vB2
      W3MXITHR5A3LI3PIWB6+73bGj5tAw/FCQnPyyEyOvYJ0t8WXuEArlV29odnaC+dISMxAoY1i
      9qgI9hw93/u29koKKmxMuGUywereeb9GrUJEb2UDkcuF0+XC7nQgk0mRSmWIxWIUClVvlMPp
      4vC+Q0RlDWdUbkq/jdbD1eBCJlfj6yVi69Z9OIGApAzGZqVx5tBmKvV2zpccJz47B8QS/Pz9
      OLZ1K63fItGNp0Binnjmad55719IlHLEmkgW3TMY/elM7njwMf75148Iz4tAGRJHvGof61au
      QaL0x6nyx1eqQKr0IjQQxmVO5K2XX0Es1fLYPRnUN5tAIiMsxB+RREZYWDC5KaHs2L4ReXcH
      mmxzfw/cw1dwULBtPfv2FdMl8iErNYD8/GLih0yiYP9+4iK92b/vEE6FP4FaFxetGqYEqzGN
      GsGS5Zsxa4Px+xbpnjyAAOh0On7+1hskz5nd36YMaL51Eezq5sSpJrKzEr5VxoAtizLQmZ+d
      y3MPPyaYfJvVhkwuXKjXbndczgMI2CDjCmOQf1vRLJGW7KzrP3HncQCBkIrFqGTCJXkkLpAL
      KN8uEj4RJvQYrga3doAX//fX/Oj5P+EFfPjXXzNq0c/Ys3kvjz18x1fet+HNP5G68Nck+feP
      nV/H0doq/p2/WzD5Qm9VcLm4XHhYWB1fN4a04DAmJ9+Y/mpu7QCdnfrP+5T0dOkpP76f5avW
      MW7yCE7s305jezdDp87H0FLP+o8/QOp08NBjD+Gr6P/gltVux2Cx9LcZAxKzvfeYTI++nj3b
      tpEy9SHiVW2sWLEKdXQOc6eMQCyysPdTHafrOpk6dwEXDqynqkPElJnjyP90K50mA8NufYQh
      cd+e0+n/O+WqEZOQnkVW5hD8LPUoQpIIVxhY/uku7EgYNvk2EqUXOehpen3TIJVryUkMpM0E
      pft3kjrjPmZPGHL5qSQmc+QtLBiXRmVjFS3mAGYPDqDK4M+DTz1JbkoyiTFXnhJclQM47VYu
      nD3JyZMnKS07Q7vBxHfdNG3p1lNWWo7JfuVok1qu5rO32Vy+eF+u+txcUc7BojIikjNQSxwo
      VEqCA/xRKhWYrTfDQUEPAAqNN16q3jVCc1cPxZuX8+dXF2NyOAEZPU1nOd6uYnx6HHJbPRsK
      KwlQi7HpK9GroghSXvn2vqopkNXQzLM/eYohU+aBSc+pCy28+PIrxPpdewu6tW+8wDn5UJ5J
      SkAl/XYD50zJ473X3yFY40KUMJwQrQZHRwVVnX5IXRaOHi6gQR+NK/iazfAwAGitLkO3cTc1
      fjYeGp7CuaLzqJUiultq0IscfLB0C/GZSZQFSmnRW9FqbLR1mjh6voyhQ6dclY6rygOY9bX8
      +Jd/5G9vvIW31EXZ5n/z7vkY/vbkRDav/YRLeifTb5tPcrgPZYd3sqvoLPHZY5k+OoPC3Rs5
      drYGv5hBTB8cxFNPPE32/J/zy4fmIP+acP+X8wAulxOT0YjDCWqNBokYTEYjEpkCm8WESCJD
      JBIjFTkRy5S47BZcEhkyAevlXA06nY6XP1nBLQ8LX37lZiQrLIJZ6Vk4bBZ6TJbe3hAaNVaT
      EaRyzhbtJ3LweFQOM06XC4VKDXYLVocIjUaF025HIpUhEgmRBxCJSBuUw4Vth9n+QSHF4mHc
      Oy6Ql57/M7/72UxeW1XIL565l53rN1IRKeF4tZW58+by+p/+QFza/5GTGs+okSO4wo//ZVVi
      1JqvxnpV6t55kFz2NeUv5P3VFPW/SQ8JY2H2EMHk2+0OpFLhEoaOy2VRxEI2yPiGMXgpe2vf
      SGQKvGVffKeqy/dC7pjPft2/lEOQST9viSu+hubb3ykK1Klvw8/Hi6OH91Pra+WDShnNl45R
      dDKZ+MHjSIiNJ+rJx7BbjQSwlzdff4OSi03MEMvRqpX4+HgjYH7FLfBVqUkIFG5u5jkQ0zdc
      tQPYzAaqKi4hs3Ww5LWV3PGDv+PIryUodia35QayNjia3PQ49n9USHVtDO/+5S8MGprAnnpf
      fv+Dx/jzs89isV1bp0a7sQ3dug00G8xEJg1m2sQ85APEc0xHj9L6r1cFk+90ugTN0rouB+mF
      /LQ/G4NYrcb/0UcE1PTNXJUDSBRactOjWPvxUkQSOWMWPcuM3DAcqT9n3cqPWbHSRNb4WSSk
      x3P/1E5WfryGvPmPMTknjM4Pl7F60z7G3zYXX4WUrOHjCdRezaPbxYo3/0XC7B9ye7wfuz5+
      nY2H/IiQ11Nb1crE6VM4uHE90uhcpo0aRFtVKZv3nyAkNILR48ZSUbyD4goz8+64jfryEupq
      K9C7grht+jgUN6D2j62mFuOhAsH13AyIvb3xf/QRXC4XVWVH6FInkBXjxbb1q6nU25h710OE
      aAFcVJw4gMU/g+qirVxo7CQyfSRTsoI5dLqRKWOufcp5VQ4gU/vy49/8+b8NV/ux8KEnv/K3
      vCm3k/elBfijP/r5Vy9KuPsqTevgeJWTRUm904gho4fz8vrDHDu9nTtfeJONrz5PxPyf4cp/
      l1VOO6W7d/DMU3fyox/8An9pE7rTGn4xJ5o//OlNMsXn0E77Ma78D9kdk8yMzK85HOqh33E5
      TXS1tlOvDiTd34rZN4kn5g///HVzRz3F+3dgHZrMPfPuZVTzOQ6etVBZ04TR0PaddLpxIkxL
      mMZKXY8DgKbqKiKiE1CGxhEbpOFCSw9ZiSEMmTAZpakNl9YPf/8QkqNDaamtIiI1Db/INOiu
      xukdTlZiKIH+3nQbPXkCd0UsUZOVlYJIBGJNIOPzMqgq2cmxSwZcTjvvvf4qLQYzJ4qLsWEj
      //AZRg7LID07B8V3nA668VYIGU/9+BHefv2fKLVK7NIAHrh/OEuqjiAGHrx7Jm/99R+IbTbu
      +eEPcTWU8+/X3+JSSw+PTbuXsrfe55/HZEyY/wjms7uRS0QoNV6ovy726sEtcDraWf7BSk52
      gLdsJuWHDtFptTN7fipFp1t58Ee/xl5bxHZ9Ct0XTuKdOgJvpZj8TcvZta8Es8yP2ZOGXtOv
      +k1xHsBu0rNs6Qq8AwOpqDXz1FP3o+zH+1yn07Hz17/hl1nZ/WfEAELs7U3k229+4+vN1eWY
      5KHEhPpcs+zvxXkAqdKXeQsW0tFjYdrMkH69+T/Da/o0wn/zG8Hk22w2ZNcQ775WHA5Hbx5A
      wDDo52O4go7gaOGOqt4UDoBIhJdfIF7fdvbtBiNSqZAGBgom32m1IhUyhn4D8gCCj+EqcFsH
      MLXX8MnaDRw9eoSg+Fyy8sYwd+LQ/jbr6jl3FtatFky8TOADAZLL5wH6lOEjITyij4VeH27r
      ACr/KB549AdYO2sYvOAhhkR7cbHkADsKTpOQO5qcYDOHa9Vkaeu4IE4h3HqBA8fO4hOVyazR
      SaxZtR6zxI+F99yBX3/MiUxm0Au3NVvoTIYg8q1WwEVT1VkOnKhl1rTxgItDWz9Bm3ILWXF+
      2MydHN6+Eb9hC4mXNbBGt52g5GFMygvg3X+tRhGTzAMLpn+lCPL14MZh0K9iMzTx7qq93PnA
      fZzdu5oOdRQn17/C79/eQWasFyXljQwdmsnm5e9TtHM1p8wRzPh877gHd0Ki9EEts+N0QVdN
      GeWNzTQ19wDgcopICddS1+Xi5NEihk6bj0x/lrozpcROfZBHFs7os5sfBpADWE0GqipOsuyD
      JXS5fJDJNSSESDFpIvCWWDl1oohavZ3wAC/ixz/AjOguXv3HXzl8rrm/TffwFUQEhoSjlInB
      YWLbvmOkxoai7+jCCcjV3gQH9J7iyh0xkmPb15B/8gImAriQv5Q///tDLFdxluRqcdsp0H+i
      8g9nbE4OfiGhdHVWYqwo4IRrMHcm1bI6/zxihRKHoYnSylpqzxVS1a0kMzkSq83R36Z7+Aou
      Lpw8wpEjRVgl3oSHB1Fx4SQtskCqKtUE+Mo5svcIRS4rqRMT8Q8KIgwtSqWUmH8cgucAACAA
      SURBVJhoqmrbcPRhDws3zwO4MHR1IFf7oJCKsVl6aGpux8s/CIXLjE2iQSOxoTe5kDuNdBjt
      qFUKtF5aOlqasItVhIUECLql9+vQ6XQUvvM2L8ybe0P1uj2TpkBsLJ2tzXT0mEGqJCYiBIfd
      jNVuZdfOIm6ZOoKmxlacIgmBAX7o29vxCQhBq4CG+kYU3gH4e2uuev1/pTyAmzvAwESn01G4
      bRsv/OyngumwOxxIBfycBDkPEBoG2i/Od9yI7dDfi0SYW+LnB4lJgol3Wq0g4M3jstsRicVX
      TFINdNzaAdavWsH0O+7mir2xHRaOHysnc0gWnzV6tBiaKaszMDj120vnCcX5s2fRrV4lmHyn
      0yloksrlciJCdN25Bq2XF5OnTe8jq/oet3aAgvx9TPrMAVxOzpcUUFpnZNKUSZiqS5FEZiPX
      n6VJFIRSpcBubGPHjj14x2UzLMkfpUKOuauZ3bv3owxNZcLQOE6VnKW2porYwWNJj/Tl2KE9
      VOqdTJ46BV9V330cdTXVHDmY32fyBiqBQcFMnjYdl8tJ9dnjOPxSiPJxsG/XLqzaaKZP6N28
      Zu1uZceOfSTkTSQ10p/zp4rwihqEubaEglMVDBo5lczYvs+sD5jnW93JXSzfX0VWlJy/v7qE
      49tXcK4dao5tZlvJRTas2cL6d/5CT2Am5oZK2povodt/hLWL38UnMYvCFX/naEUDf/3rO6QP
      TuHtl1+n/MgWjjaICbKd59WlwlVx8wB2Sxft1Rcob+jCbneQnDUcafNxTjfawGVnx4ZNxA0e
      Rai3EmtHFes3beJSdSfFZyqZPn06CWG+gtg1YByg/lIFSUOGEZ+Sg6O1FuPXnK4cMWMB53d/
      zMFjp+gx967tVVo5RQf2oe/uocdkJT59CHExkShsZkQyBc3nj1Fe24pRwH5eHkCm9CU3Jw2x
      SITKy5uK43spa5ETGSAFh4Xapmbyt6zjSOl59u8/yS3TxyICRD1NrFj+MWdqvtuBlyvh3g7g
      dNBtMGAwGAiKjub8saNUXziFOCCC4EAvys+e4fSZ83wWx+rQm1j46NPEuao519p78KX49CXm
      zpuFpacDq82OWPTFkC+WHSNp7GxitC46bbbvXOzLw5VxOR10d/dgMvagb2kmYfg0cqNFXKjS
      Y3VJiIqKYfqcOdScKqCmvoINazeQX1RE0tBbmDcjl9OlFYLY5dZrgAXzZrFr/XoAxs6Yz10c
      peiikV8+8yAakZHujVvxG3cf2VHx2KO8iI7yZdf2nURMfYyxGaFEh0cSOCaRvfsKWPTLP+Ib
      FkLo3PGAirvuX0haWhS7tu1CmTWHh2Wa/h3sTY7N0sa2Qxcwii5RHzSSipP7cfkkk2ItY++p
      aCZOGsPWnflMmbeI2CAN3R2NmFw+dNceZ+9xPbNm3CKIXZ48gADodDqWLlnCPXfdKZiOgRIF
      8vLyYsqMmV/7mtVqxWG3IVeokAhUzMyTB+gnktPSuH2hcA5wM9QFgi8KnfUXbusAls5Gylts
      ZCVGcenUYawBaaSG+3CquBipVkFMXDpq+fV9OU6rkdMVDaSnJPT5YqjHYKCxrqaPpX6B0JXh
      nI7eTPD1NsoOCY9EdIO3olwLbusAEkcHHyzZxT+ef5TVS/9NZ8AcXvj5RBYv3cBvfvskUrEL
      fUsjFpec4CA/HFYTrW0daH0D0ColtDa3IFJqCfBW09VlwGw2ofTyw1slo7W5CZdcQ6C3iqAA
      P6zGLowmGxY7hAQH9EnVuuaGOk4dLbx+QQOc4NnhiEQSrKZuzA4JXhoF+tZmzE4ZAX5flLe0
      mgxYXAq81HIsPV3YxCrkIgtt+m4CgoKRX00tze+A2zqA1D8BL+sS9G1VuOJmo2o4TdPFAHwy
      8li/9E2GDh/Gip0XSAlwMWruvexd/ha+MUlYHWrCqaa0xwdH3RnGLljEGy+9yNSZUyk5Vcud
      40LZdE5EEGZmL5jGeyt3MMqnkm3NcYR0HifrvueYli7cUcbvJ1YO7dhEnSiMu2cO5sj+A3S0
      VBE68VEmpshxOazs/OjvVIbP5ckZKWxa9lc6Iu4gtOckRrEUmX8ScyYJU2fVjcOgMkbGqti0
      5wQxiWmkh4rRbS1hWF5vpQWVTwjmxnN04ovK0kyd2I87FtzB/XfNYs/x8zz28D08NGcwG3ae
      IDxuMPPm346vowmpbxRN547j8glGfXkGIZYpmTp7PrdPSqX0QmM/jvlmRc6EW6YR6K1ALNEQ
      FaqhyawhJqh3DdN4vhhtbB7+ahlVpUeJyBqBWiLGaTXS1NJK2anTXFtRzavHjR0Aho0fykfL
      N5KaGk9WdhZr9p8mK76364dEE8wv//Ai0+J6eHtjKXa9HpPNSk1lFb44qWzvobqqjojoYKRS
      +efBDFVQIn948UUSjAWsKawDQCQSIZO57cPwpsJlMxOdM5l5I0MpKe9tYb1t205Kjxewa8cu
      tu7aTdHBgxzMP8LYhQ/y8N1ziYoIFGyq4tbfuk/icOaOrSUxTItEM5gFM3oIUitIzRyCRuZg
      +7plmFwqHr93JsYLR1i++H1C4nN45JmnWLfqQyS+Mdx3aw67ZSAWS8kZNgIV3axftgmnIpfb
      RyZxROkk3CscvKV4R2SQZXWj0hI3Dd2sXb6S820G1GoF9WVH6bDLmTzJxsZdB3ngmd8h6qql
      qF5MXmo4GKspqpDTdOIAe0qqmDJHuGiaJw8gADqdjrWfrOSJhx8UTIfL5RI0uuKityzE9WoY
      MXHKN4ZSOzsasTt9CPBXXaeWb8aTB+gnImPjGDVZmOwl3Bx5AJXaf+D0B7jxuDB0dqLUeiOT
      iHE6bPQYrSjlImzIUSuux3QXBkM3Wq1WsF9Rp8WGrbNHENkAdpsNkUy4Qr8OR++BmC/vnfpP
      RBIxUq1wv943Ajd2ABPP/ug+xi58nrtuHcz5A2v4v7V1vPy7hfSI/IhWaK8s4htx0lBfR0JS
      CkK1Cmg7cJLy55cII9xNUEUHk/DMgv4247pwYwcAmzaSytI9WGblUny6En+NjJaLxZyyxKA7
      vBW7BBJHzUVxaTcn2+2INVE8OjOdNxavRSIWkTfrPpr3rmX0o89QuuwlvMYsYN0rr5EyfgJd
      LVU8lZCMZIB0nHFnTIYmti5fjNe4JxkVZGDDxo8JH/YYY9N9wGVl2yfLONfYRdroqdguFHKu
      oZ2cyfNpLlpDi0XJmFl3kxXTP8EHtw6DimVqYjQmyk4eoluVjBywmbrp7Gijor6NxOxxjMyM
      paqiAk1QLLdNG0v+ho1k3/YgP35kHrp1G+jQ67G7wNjZhtlqxeUTzSN3TcP8pS70Hq4PlVcI
      t88cj8MlQh0YydwZY7FbLgdTnA4sYjVZg9LA4WT0pMmkxUchFoHB7CRv5DiSIq696nNf4dYO
      ACIGpcbwyp8/YsiYzM//KvGJ5fnf/wIvSwV/fXUF9//i94xJCuCNP/6JBiufnw8QiyU4nSZs
      drDae1MpGrV3fwzk+4vDDlI5CrmU7m4jYokEbx8vTEYj4yZMxt55jq17z/SbeW48BRIRGhJC
      Uu5IfPbWkR6kJTjYH4XaGy9jO4uX6EAkIidvLNtXL+GSQUJo1mDmLhjO4sVLOC2WMG/efShr
      drHizVewt1mYoVAQGOgLiAgICHR37x8w9Oir+GTFFsqdJYTYRlG0ezOVxpPEqIbQQhBicztF
      JbUkZAxh88YttHQaSBkVTcnhAhq6TAy7dWy/2e7JAwiATqdj04tv8OMxt/W3KYJypUVw5ZkT
      eMdm4q/6+u/TUxfoJiZwfDap//uQYPJvSIMMsfhbC2OJrnCIJTbN/TvkeBxAIEQyqaAxcqdV
      MuAbZLgDbu0AnbVlLF61E4XciU0VxxMPzvnO3QC/jFlfzZq9Z5mVl0CDy4+0KP9vfO+K99/l
      tocf5VrPLTnr27EdLr8+Q78VFzZBi7+7cACOyzokscGIQ2++fVJu7AB23nz9Axb99iXCNRIO
      79hAe5eR0t3rudDYTe7EmXjpSzlY3oi5x8bt995P4aYPMTrFdIuCefTuWziweT3lDQaGTZxF
      ip+F1eu3YRFrSfDt5qMVxQyKeoQOpRJb1SYOllYTlpxHuKiOiMEz6Tq9jTqHH0uXf0TEiOmM
      S4+8RvMdYLYK89EgfIOM/8Rl762y3VZ3nj2Hy5g6ay7m+hJ0Ww8yeOodDE0KpqehnCXrdmEx
      dDH57sfoLNuGKmkWQxN96Gm9wCdby1l03yy3uunc+PnWSUOHknBN7wJqxNTZSKr3sK/Ji4cf
      mMvK99+mprwUeexwxkaDLv8sJwuKGTX3XrqKt3OwaDcFtQoeums6m5avYPV775I45R7uvHU8
      yRm55I4ajrKrhnMXTrFkwxkefuQRchNDqSwvocPkoOHSKfSySDIy0si91pv/Jkam8iXcX4HJ
      7uD48fMsePBBzh8/CIAmLIWnnnqSlJRkYgNVpKWE0dbe2xXmwP58bDYz7las3o0dwBs/XzsG
      W2+QqvTQForPVhEaFYVCHYDU2YVdpSUqNACNWoXVakMWFEaItwq1QkJ7Swtnjx3i/aXrUQcF
      0txmJzzUC9+QKHy+HJUwduD0DkMhkxMTHYHL5cLpdOHq52iYu+LtH4RGLgZcOGRqvFUaFNIv
      UopddaVIQtLxVqsJ9OtNcFUd3U6bIhKLvoluk3s1Knenp9F/IGPRbWN47Y13iAtScPaSnicf
      nc3hfy9jaesRgtMmoqThG6+OyhxNakkt3l5KrHYfJkzL4ZN3FxOiMDNo2DC6q8tpjB8CAckk
      VupYunIlRruc5OBgPl29HMvFiwxKBm+pg5PltYxO8TwFACrLjrBjTz4B7VoyFUaWLFmMMjCZ
      uqpL+IVFUnKqktwx0zF1NrJr406ONIQTPDWNMGULF9r1mKwOUAkXvbpW3DoP4HK5MHZ3YrTY
      8fbxQyGTYDEaMJjs+Pj64LJZQKpA7LRidUlw2a2oNRrM3d3I1Boc5m4MJhvePr7IJGDo0GMX
      yfH10WDo6ECuVINEigw7HV3dqLTeqGQiOjo6kSmUyBUqXNYe7CIFWrXiqseg0+k4vHoTzz/y
      I6E+phuOODEMSWQg5p4uDEYLSOQEeKvo6DCg9dNycPdBRk6cgMhuQ65U4LRb6dB34kSEt68f
      CpkYi9mKXKn4fP3iDnkAt3aAgYpOp6Nw3wH++OvfCaZD6LIoDqcTsUj0+XZxkVaJSHX1PwJX
      gzs4gBtPgQY4KgXiIAE3eVmtiAW8eZyXG2R48gD9iN2kZ/OnG6nXG4lJz2PKmFy2fqpj6ty5
      KAG7Uc/xijaGZiS6XTvUpvJajq05KJj8viyNqPH3ImViVp/IGmi4tQOsevtfhN/yOLOSA9i+
      7DU2S304cbQAl9iGJjSTCYPCkIrF2E0dbNu4CXXsECbmpbqFM3Q26Kk5drG/zbgq/KICSZmY
      hctuZv/2TRi9k5gyIh2AuvJi9pTUMXfebNrPHeHgWT23zRzFTt0GWnsspOZNZnRWbP8O4Dpw
      4+dbB0WX7IxLC0MikTNs3AiOFRZgaawmNHsc+z54nUut9Xy6t4gl/3gR76xJdBetZP3R2v42
      fMBSd6mYHnUyvi1HOd0OLruF/cXnmDUhjU3r1rK/rJ1JuZHsLDjHjNvvYFJeCogG9nrNjR1A
      jkxq/7wgktNmQ63SoApPIi0mhCAvMV3m3tdq2kVkpYQxbEgWZWcq+8vgAY+vfwTVJ3ZypMZB
      qBZEEikR3rBSt5+6dgOh8g7Wbd5DVUMLMpmEc5WtDEod2OFhN3YANQsnJvHBmr3U11ayau0+
      pkwbD2Lxf01xEsPkFBSVs+/ISYZkJ/aLtTcD7XUXCc+axNAoERfqujFZHaTnjWfikAiiEnLJ
      HjGRUTmJxMfEYmw8jSsoA2+ZO0w4vztuvQYYPOshfEsLKTpWyqyHf0JMkBeahQtRAjPue5iA
      sEgWTvMmMXwGB/ftJ2DyA+RlhPa32QOWyIzR1OfvxRQ2grieExy9GEeks57zeh9unzKIi8cP
      0WAPZNr4dLrraxgzPKq/Tb5uPHkAAdDpdGxaoeNHi54UTEdfRoHUfloSRqV95W/GHgMyhRqZ
      gLkGTx7gJiYoIYxBs/IEky/0zSNXqBB/DypmuLUDFO3bRtLIafjK4eyxQ4Smj8L3il2zexuy
      HSs6QsKgofiq5dh62jl5qZkhg1K/8ZrWqvMY1WFEB11PvaEvMHcY0V9q6RNZX4fDbkci/e5f
      n09MAGKB2hINJNzaAZb9+1lkJT289ON57Fn3IRNjRiEzt9CoNxIRGUFPZyd+gQG0NzfjFxxI
      R5uegIAAXE4H7/zxWRIffp6fzxtPwZYPeGu3hWWv/YqWhjqMLjmR4UG0NbcQEBxMW1MTat8A
      5DI55u4OahvbCAqLwkvhoramDrl3ACH+PtfULqu7roP6I5eE+3CuE+8IP5CI6WprpLXbTlRk
      BDKJCKfdQm1NLVJtAH5KF3VNbfgFh+OjcFFT24h/aCQ+mr7dEtGfuLUDyEMH4928jwNnRwFg
      66jgL0uWMyQnhnU7FMgaTrDgpz/h1w89xvOL/8Xid7bzh98+BoBfeDJNZ45j7RlEfY8EX7WM
      i4Vb+eRwPZGKbrwGTcVwcDmq1CEUHGtkQZaSlrCRXNi+nMS84XSXXUDVWopek4D+4kmm3P9j
      sqOEadbcb9hbWbN6CwE+IirSJjE5O5ra8yc4cbGN5qY2hg9NobaxlYoDx8gIcNAq9aH9cCmP
      3junvy3vM9z6GSgSy3jwyYf4+J23Mdld1JzYx5mmDmob9RQcLSA5PojDWz8ldNhwtq5ZR/yI
      MV9cK/clTtbJrsKjaIITkIrg4J4ttHXpaevQU1B4kjmL7uW1l17mvkfuRSYCR8c52iWp3Dbz
      Vu6ZOYLTl3qYf/scZgyPpPDowMjqXhNiDV4yExWN3QT6qgGISs1jaGoYIdEJJKTG0lheTkB4
      LEEBPlRfuojGN6ifje5b3NoBALwjs3lghIalu07jHRhKcuYIHnngTmZPGEdOTgbLlx/grjmj
      2LAmnxHZMV+6UsTE8Sm8/O+1ZF7ODQSFxjBi8m3cPe9WRg9J48TBXQwfM5ytuw73XqHyx9JR
      jdlmo/xCFVJRN80d3VTXtBISFtAPoxeYniYM2lTumzmY8ku9ZysazpVwrlPBtIl5mHvE3PP4
      w3TVlXOuuoW7H3gIQ8P5fja6b5E899xzz332D7vdzpeiov2CVCr9PLxnNhlJTsskNjUXpbOb
      4dPvIsh0nq37ShgydhIJMRGYpQomjRyGSK1m1JBspGIR4MJssjB44gRkTg1jhyZhtkmZfus0
      Lhbu5kR1DxPGDqb8fDOP/PBJDBdLCI5Lxj8ilcExInRbdiP1jWXWpMFs37QRUXguM8YOuiz7
      ypSXl3O+5CzDM4cK+EldH4Fp4YiVXhhrS9hX2sy4MYPZuWUnanEPhcUlnKloQOvq4tOte4hO
      H8bgxAA2btxKQvYY4iP6poeaw+EQPOR9JR2ePIAA6HQ6tn+8iZ898GPBdLhcTkTfUrr8SsRO
      TkXy5bZQllYaur0JC+gNrd6I/gCePMBNjG98EAnTM6/8xu9In988ikDCbp7gzlXjxg7gpL2l
      FY1fIAqpuPeIXZcJP3+f697ubLca6bGAj5f6Gq900WM0olKqMJvMqDTqb7TFajLS1dp0zbZp
      /QIRD/An4EDCjR3AzP/7+UOMnv8c987Jo3zfKl5Y38h7r/6c6/2hartUwJoSJ0/dNfUar7Tx
      yr9e4enHH+KNt9fzzLNP8k15uTMFu1n9145rtm3hr/+G1vcmXHC7KW7sAODQRlNzeh/m24Zw
      rLyWQK2UjsoS3l++A5GllbQZD2M4up52mwxVZDZ5/k1sPNqCwynnmR/eztJ3PsRmtyKJymNu
      ppwlm4qRu2yMm5DDke0bMFccwDdzJmnWwzhyHyOibiVbOzJwndmFRSYlPHMSIwI7+GBzMVKH
      gzn33E7Brt1EBfiyc/cOxoxPZdv2wyiwcuePfkOif19VOzCzacXHXGxsY9DEBUzMieFc4Q62
      FZbjF5nBlFQF768/QETKcEbFwPaCU7i8Y3h60c1djFcI3DoMKpKpiPWycOrYAXo0KcgAo7EL
      3+AQAlR29h4soampBXVwLJNG5dDV0oRVrGLazClILD2ovP3x81ZRfOAoutXbWPjDn/Gr3/ya
      eH85GaOn88Qjizh36hAmcw9WhwuHxUh3Tw+NLa0ERQ9idG4KK979iITBeWSEWFlb0EJyTg6z
      59xKbu4IwtRm9D0O8ibMJNK7L39LFMy86wFmjB2KWtE7yWrXdxCVkIKp7jQbjzXxzM9+SrCk
      nbCMcSxaOJfoIE/fg++CWzsAiBiUHsPLf17GsNEZAJwp2ItXbC6TRmbjkmj44bO/Y2RqIK/+
      8x8MuvUJHr19LPnL/oJudyHNVj8mTZ6Al9wF2LHbXTidDpxO0GpUgAiXy4nT5cJksWKxWBGr
      g/jV//st6cFOXv7Hu1jFSoJDQ4lMymFY2le3WodlTuV3z9yHpXwrb2081acjLyvYSZdXPENT
      owEYOn4GmQmRKGRyZGIXTpcLl8tFT/N58k/UMWnimCtI9PB1uPEUSEx0ZCRJ2aOIyGwhNVBL
      REQISbmBLN+6jVapgVCtnE9XLKXV7CRj8BgqDm9hb1kTzqBsxozIYcWHa9iw+RIyby/m3jed
      Fe+9wnaRg2Fj8gjy0yCWKogIDSFzRBJvLH+bSkU3gTkWPl72ESaHmNzRw5iQMIyln25GhIh7
      fzCT9sQgCk43EuHVzcH9eyguLkXmlDNpVlzfDd3ezp79xUi8z2M0T8PZUU9atDe7duwjKHUM
      UxJFvPbKv0jImcDZw/mcbbFQr+/k0Tum9Z0N3xM8eQAB0Ol0vPPS/zJv3OBrvva/FsGWFk5W
      2MhKDf/K+26GPsGePMBNzKAJM7j/D3+45usksv/4shRBZH3zLm4P14nHAQRCLJYglX8PM0sD
      DLdeBD/3+Cw2n+zdpLXkL7/iQvtVXui08bc//IEWC4CNv/3ljzQbLNdli9Pezj9efvPzf3fW
      l1Neq//G9+srz3F+17pv/a+l/MR12eTh+nHrJ4DBAave+id5f30Ro6ETu8PCtlUfc6HZSO74
      6TSXFjHljnl88tqbzH/qIbat3cnChXPABYauLhwuABfdhi4cNgtb16zkUkM7YRkTiDGd42iL
      mY7WduIig6hp7OHuB+ex7u03kKp9CEgZxcRkJas2HsCh8OGOhZO4WHKQ996yoo4ZycQYI00W
      KQVbPsIkDWfGmDi2bC9AHRCDQgZOhw2Hxfyt43PYekuFd7dVs2v7HrKmP0CcH7hsRrbq1lBv
      UnLblGF8umELhg492TPuwnL2ABebzcy6exGx39zYxsNV4tZPAKk2inunJfDuyh24XNBStov9
      TV48dP9c1q74CEPjaS6eLWbb/oOcPHKYS91fbG3obq9iyduv8/rrb1F0rhGrsYUuuxfp8eEs
      //BDKs8V4JU8hXRFK47IUaSrOzh4toZT5c3c/ejjVO9eyZatW2lTxTFnxgTUUhFoQrj3occ4
      vPUj2luqqGxs58zpWubeMZtV7yxl4sIHiXZcZPOx6msbp9KHrIRA9Jf9xdZaSbsmkemDYyip
      7eGRx55g+JAskiICGTZ5DvNHhHK+UbjuM98n3NoBAIbNXISzbAPFNZ0Y9C1cKitk2QodPiHR
      ZGeksPK9tcy7bwHL31nDyDG5n1+n9Y/hgcef4qmnniAvORRLez2784+hikglWO3ABfj7+eKl
      DSYkwBu5TILd7iQgLByNQomf2sWQeU8zLrSbv//xOQrPtRISGopSrkLmsn7e6cTLKwStWkpt
      3SW2rFnOiXobIdprywgrNT5olV88jOVhqaQqW/l0x37aDRYshiZa7T5E+GlorjzJaXsC4xOF
      a8D3fcLtHQCpmp/87AnKS88QnTORjCAVIqcNtVcAiZmZlFS3MnFoCrUdejIiv/nIolgqRyV1
      UXpoJ9WNdizfEO09U7ib9959i3rtIFyX/n975x4cVXXH8c9u9pXNgxAMJgESE5UESNAkGARs
      VRQRtLzGUasVa0u142ix1kepzFihpU0KQigFeSmPYlBjBPMAY5HKQ0AKEoIxIWTz3CTLAnls
      dvfu497TP1KrdHhslHXs7P38tbNz5/zu78z9zrnn/M753n0ca+4mIXEIJuMl9pRrtEybNhnZ
      pyB5JOIG9e/opM1SyTsl/6CsrBR7yyma7F10dkt4NUayR15H3bEjDM/Kwetqo3DrDlpqj1Db
      5uhXDJUL872uA3g9HvRGIxoEHklCbwxH8XvweGVM4eGEaQQerx+DQYfX68NgMPYdXBcCr9eL
      zmBEq/nPb70Bn+RGRkuYVoNWAxqdAY3shzAdyH78Sie//m0Bi//4EgajiTCNQJIk0OowGQ34
      fD4MBgMejwe9TosstAhFQW/QgyIjSRIanYEPdpSzo/ANnpn9wCVzjUm6nviMMch+L5LkRWjD
      qPl0P6njJxIhSygaHSaT4SsHCCHjdrpRAG2YHvMV9uv/OqFSB/heC+C7RihevjjZxMj0679V
      O9u3b+fpXz5OcuKlXep04WaMkd/sGwJX0hjrQnz5WGj6Y4XRT4KdQyAxzhNAV1cXHs+3Wy78
      tgSzw78rjh8/jsFgICoqKmgxjh49SnZ2/yvNgWKxWIiNjSUmJnhOGMHOIZAY5y2DBjPZUMLp
      dJKens7QocFzTj5w4ABZWVmXv/AbYrPZSE5OJjU1NWgxgp1DIDG+/5Pg/0NSUlKIjLwyDnMX
      IzMzM6jtJyUlER0d3C3Wwc4hkBjnvQKpXGEUL11OPzH9Pnr5PwiZLoebmOgrLyqPowthjsEU
      xGmXo7uLiOgYgmU1KoTA4eghOrr/86nzbFFUrhx+TxcbChaxrrAcc+IIEvR2Vry2gb2fnmB4
      RhrF61eSOGoszsbDLNtYQW7uDRe2XREetq5azKqNRfgjhzI8RuLlvAJqPKXJWQAABfRJREFU
      qusIH5zMoaIVhKVMINxpIe/VNxg1ZgxmfWBPs+Xobpbk5fPRSTtZN4zGrBOUrf8brvhRDNa7
      2LBmNbs//gTzkDQaP3kLi5JIYoREQf5SBo/MIdZ8+RWcj4rWU7B6Hc0OI2Myr0N4HaxZ+hqp
      Y26mt/EgeYs3cLLhFAnXZvD3VUsYOW4CzqYj5K8tI3dsNvrLqEZxd/L6qpWs37SR8ISRGHtq
      Wb+lmH37DpGSkUPzwVI2v1dOjVUiLcHA2q0lZN+YweHyzVTUutVXoGDRW/8pdf4hTJl5H7pe
      Gzs2v8XNDzzOjBtMvL/nc9qaGjnTVMXCFcU8NPt+jBczqj3zBXuajUyZPp2BGienm79gYPJo
      ps2czohhg7C1WDjTbuHlP/yVaY8+Rqw50CKczPs7dzL+lluZOC6bToeb3UVrWbe1nE5J5tSB
      EpTkW3nigYkUv/8BXXYr9rM2li1YQPrdD5E6KJBRzUXx3hP86J6pjIgz4fL0sCovjw8OVeFT
      oKnmc5LG38n0GbNIHKCnqdGCrfEzXlnyFj+d80hf9f0y2OoO0KRPZtrk29F7XfT0eHno508x
      KyeWol0H2LKjkrlz59Jb/U+auh00tVr5bNdWth2XuH9yriqAYBGRfCODek5QVLSNqMQk2r0w
      ZKCRAbEDabFakTqb+d3cZ7hxxhxSroq4uNNF7HAyo2y883YxIioOl1sGTy+7tm3mnd2V+KUe
      8uc9S3T2NEYPG9gPx4ww7vrBOMrKSjhYZSFuQDi3zJzDg5P7zLzO2V3Ex8cRERmNvd2G8LvZ
      /Op8qsMyuTsnJcDVOjOTRsezubCYdtmE2RDB4y/OJzOpb7HFJfkQPW0UrStgb40dxdnOvGfn
      kTH1YZIGBmADDlyVmsMA+794u2wfpthBjBh7G1dH+Pnw42NkXRuDzhSPThvGAI1EW7dM89EP
      eTG/kEfmzCbSoFUFECy0hgE8+fxz3D3pNjYVFCBkgcuvIPv9mCMiUMKimbdsJZ9t+Qt1p3sv
      2o5Az6O/ep57p9xJydqVxGTdydO/eJiZ995B1bFDKFojj730Z1wH3+RwY6DbZQEhSMm5i7mP
      3ke8poV3PzyBXv/V6GE0gtvlQVZkws0RIDRMfPhFbtJWUry/joBmjkJm0oNP85NZk2nZtYnK
      DgX910a6sVNn87MHZzLrtgw+PlyDRuh44U9LqHx3NQ3nLr2R8Eu0xhie/M18pvxwOIVrXscj
      OXlz5WKibv4xE9IHo3idCAR+YcAcriEiYQTLFj7BysUr6PUqqgCCRXfzERYt3UjjqRrirk1j
      yu2jKNm6jfd2VXPH2NGYo2MYMiyNF56aweJFy3F45Qu24++qZ+GiFdTX1xExLJW2g+UsX1tI
      ecUexuTegsFgJPmadOa99BSrFy7A2h1oHUemdONySj85Qatd4pprzje9HX7TOKr3l1K8fSc3
      jc9FqzeRlDSMOc/NY8+GfKpaA7F8cbNs4StUnmzAqYsjPub8zcd7i9fwRlEZpftrmTQhE01k
      HNenjWL+3Jks+H0+3dKF++TrnGs4TP7y16lvsDI4OZWKTXnsaTMxJNxF01k96Qku3ispo8Vw
      NWnRBgYlDGVE7lTuSfOxdMtOECpBQVEUcbr5c1FasU/0evxCKLJosZwUDa02ISuyON3RJrx+
      IYTiFy0NjcLtly/aVmdHgyjdsUt0Oj1CkX2itaFOnGq0Cr+iiHM2q3D7hBCKImytzaLH7Q34
      Hv0epzjyUZk4YukQstL3X5e9o+9+hSLOtjeJ2lNNwutXhOPcadHt8gohFNF5ulXYu10BxXB2
      20VFeamwnnV82THC1t4ufLIQsk8S9bXVorn9rFCEEO1tVuHvu0hYmyzC5b14n/wXRRF2a4Mo
      31khHG6v6GipF1VVVaKq6oToOOcQfqlX1FRXizPdLiH7PKL9tF0o/8nd0mwV6jKoSkijvgKp
      hDSqAFRCGlUAKiGNKgCVkEYVgEpIowpAJaRRBaAS0qgCUAlpVAGohDSqAFRCGlUAKiGNKgCV
      kEYVgEpI82+ppryA6xW67QAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
